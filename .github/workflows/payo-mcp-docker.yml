name: Payo MCP Docker Build
run-name: Payo MCP ${{ github.event.inputs.environment }}-${{ github.event.inputs.tag }}-${{ github.run_number }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'prod'
        type: choice
        options:
          - dev
          - prod
      tag:
        description: 'Docker image tag (will be appended with build number)'
        required: false
        default: 'latest'
        type: string

env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: 411429114957.dkr.ecr.us-west-2.amazonaws.com/demos/payo-mcp
  SERVICE_NAME: payo-mcp

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    outputs:
      image_uri: ${{ steps.build-image.outputs.image_uri }}
      image_tag: ${{ steps.tag.outputs.image_tag }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npx nx test payo-mcp

      - name: Run linting
        run: npx nx lint payo-mcp

      - name: Build application
        run: npx nx build payo-mcp --configuration=production

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate image tag
        id: tag
        run: |
          ENVIRONMENT=${{ github.event.inputs.environment || 'dev' }}
          CUSTOM_TAG=${{ github.event.inputs.tag || 'latest' }}
          BUILD_NUMBER=${{ github.run_number }}
          
          # Generate single tag with the requested format
          echo "image_tag=${ENVIRONMENT}-${CUSTOM_TAG}-${BUILD_NUMBER}" >> $GITHUB_OUTPUT

      - name: Build Docker image
        id: build-image
        run: |
          # Build the Docker image with multiple tags
          docker buildx build \
            --platform linux/amd64 \
            --tag ${{ env.ECR_REPOSITORY }}:${{ steps.tag.outputs.image_tag }} \
            --tag ${{ env.ECR_REPOSITORY }}:latest \
            --file apps/payo-mcp/Dockerfile \
            --load \
            .
          
          echo "image_uri=${{ env.ECR_REPOSITORY }}:${{ steps.tag.outputs.image_tag }}" >> $GITHUB_OUTPUT

      - name: Push Docker image to ECR
        run: |
          # Push both tags
          docker push ${{ env.ECR_REPOSITORY }}:${{ steps.tag.outputs.image_tag }}
          docker push ${{ env.ECR_REPOSITORY }}:latest

      - name: Output deployment info
        run: |
          echo "ðŸš€ **Deployment Summary - ${{ steps.tag.outputs.image_tag }}**" >> $GITHUB_STEP_SUMMARY
          echo "- **Service**: ${{ env.SERVICE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ github.event.inputs.environment || 'dev' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image URI**: ${{ steps.build-image.outputs.image_uri }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Number**: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag**: \`${{ steps.tag.outputs.image_tag }}\`" >> $GITHUB_STEP_SUMMARY
